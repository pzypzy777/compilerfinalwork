// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn
open System.Text.RegularExpressions


let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 28 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | QUE
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | BOOL
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | INC
  | DECR
  | SELFPLUS
  | SELFMINUS
  | SELFTIMES
  | SELFDIV
  | SELFMOD
  | CHAR
  | ELSE
  | IF
  | INT
  | FLOAT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | DOWHILE
  | DOUNTIL
  | DO
  | UNTIL
  | SWITCH
  | CASE
  | DEFAULT
  | IN
  | CSTBOOL of (bool)
  | CSTFLOAT of (float32)
  | CSTCHAR of (char)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_QUE
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_BOOL
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_INC
    | TOKEN_DECR
    | TOKEN_SELFPLUS
    | TOKEN_SELFMINUS
    | TOKEN_SELFTIMES
    | TOKEN_SELFDIV
    | TOKEN_SELFMOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_FLOAT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_DOWHILE
    | TOKEN_DOUNTIL
    | TOKEN_DO
    | TOKEN_UNTIL
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_DEFAULT
    | TOKEN_IN
    | TOKEN_CSTBOOL
    | TOKEN_CSTFLOAT
    | TOKEN_CSTCHAR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VariableDeclareAndAssign
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstFloat
    | NONTERM_ConstChar
    | NONTERM_ConstBool
    | NONTERM_Type
    | NONTERM_StmtCase

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | QUE  -> 11 
  | COLON  -> 12 
  | NOT  -> 13 
  | SEQOR  -> 14 
  | SEQAND  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | BOOL  -> 22 
  | PLUS  -> 23 
  | MINUS  -> 24 
  | TIMES  -> 25 
  | DIV  -> 26 
  | MOD  -> 27 
  | INC  -> 28 
  | DECR  -> 29 
  | SELFPLUS  -> 30 
  | SELFMINUS  -> 31 
  | SELFTIMES  -> 32 
  | SELFDIV  -> 33 
  | SELFMOD  -> 34 
  | CHAR  -> 35 
  | ELSE  -> 36 
  | IF  -> 37 
  | INT  -> 38 
  | FLOAT  -> 39 
  | NULL  -> 40 
  | PRINT  -> 41 
  | PRINTLN  -> 42 
  | RETURN  -> 43 
  | VOID  -> 44 
  | WHILE  -> 45 
  | FOR  -> 46 
  | DOWHILE  -> 47 
  | DOUNTIL  -> 48 
  | DO  -> 49 
  | UNTIL  -> 50 
  | SWITCH  -> 51 
  | CASE  -> 52 
  | DEFAULT  -> 53 
  | IN  -> 54 
  | CSTBOOL _ -> 55 
  | CSTFLOAT _ -> 56 
  | CSTCHAR _ -> 57 
  | CSTSTRING _ -> 58 
  | NAME _ -> 59 
  | CSTINT _ -> 60 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_QUE 
  | 12 -> TOKEN_COLON 
  | 13 -> TOKEN_NOT 
  | 14 -> TOKEN_SEQOR 
  | 15 -> TOKEN_SEQAND 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_BOOL 
  | 23 -> TOKEN_PLUS 
  | 24 -> TOKEN_MINUS 
  | 25 -> TOKEN_TIMES 
  | 26 -> TOKEN_DIV 
  | 27 -> TOKEN_MOD 
  | 28 -> TOKEN_INC 
  | 29 -> TOKEN_DECR 
  | 30 -> TOKEN_SELFPLUS 
  | 31 -> TOKEN_SELFMINUS 
  | 32 -> TOKEN_SELFTIMES 
  | 33 -> TOKEN_SELFDIV 
  | 34 -> TOKEN_SELFMOD 
  | 35 -> TOKEN_CHAR 
  | 36 -> TOKEN_ELSE 
  | 37 -> TOKEN_IF 
  | 38 -> TOKEN_INT 
  | 39 -> TOKEN_FLOAT 
  | 40 -> TOKEN_NULL 
  | 41 -> TOKEN_PRINT 
  | 42 -> TOKEN_PRINTLN 
  | 43 -> TOKEN_RETURN 
  | 44 -> TOKEN_VOID 
  | 45 -> TOKEN_WHILE 
  | 46 -> TOKEN_FOR 
  | 47 -> TOKEN_DOWHILE 
  | 48 -> TOKEN_DOUNTIL 
  | 49 -> TOKEN_DO 
  | 50 -> TOKEN_UNTIL 
  | 51 -> TOKEN_SWITCH 
  | 52 -> TOKEN_CASE 
  | 53 -> TOKEN_DEFAULT 
  | 54 -> TOKEN_IN 
  | 55 -> TOKEN_CSTBOOL 
  | 56 -> TOKEN_CSTFLOAT 
  | 57 -> TOKEN_CSTCHAR 
  | 58 -> TOKEN_CSTSTRING 
  | 59 -> TOKEN_NAME 
  | 60 -> TOKEN_CSTINT 
  | 63 -> TOKEN_end_of_input
  | 61 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VariableDeclareAndAssign 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtM 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_ExprNotAccess 
    | 74 -> NONTERM_AtExprNotAccess 
    | 75 -> NONTERM_AtExprNotAccess 
    | 76 -> NONTERM_AtExprNotAccess 
    | 77 -> NONTERM_AtExprNotAccess 
    | 78 -> NONTERM_AtExprNotAccess 
    | 79 -> NONTERM_AtExprNotAccess 
    | 80 -> NONTERM_Access 
    | 81 -> NONTERM_Access 
    | 82 -> NONTERM_Access 
    | 83 -> NONTERM_Access 
    | 84 -> NONTERM_Access 
    | 85 -> NONTERM_Exprs 
    | 86 -> NONTERM_Exprs 
    | 87 -> NONTERM_Exprs1 
    | 88 -> NONTERM_Exprs1 
    | 89 -> NONTERM_Const 
    | 90 -> NONTERM_Const 
    | 91 -> NONTERM_Const 
    | 92 -> NONTERM_ConstFloat 
    | 93 -> NONTERM_ConstFloat 
    | 94 -> NONTERM_ConstChar 
    | 95 -> NONTERM_ConstBool 
    | 96 -> NONTERM_Type 
    | 97 -> NONTERM_Type 
    | 98 -> NONTERM_Type 
    | 99 -> NONTERM_Type 
    | 100 -> NONTERM_StmtCase 
    | 101 -> NONTERM_StmtCase 
    | 102 -> NONTERM_StmtCase 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 63 
let _fsyacc_tagOfErrorTerminal = 61

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | QUE  -> "QUE" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | BOOL  -> "BOOL" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | INC  -> "INC" 
  | DECR  -> "DECR" 
  | SELFPLUS  -> "SELFPLUS" 
  | SELFMINUS  -> "SELFMINUS" 
  | SELFTIMES  -> "SELFTIMES" 
  | SELFDIV  -> "SELFDIV" 
  | SELFMOD  -> "SELFMOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | FLOAT  -> "FLOAT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | DOWHILE  -> "DOWHILE" 
  | DOUNTIL  -> "DOUNTIL" 
  | DO  -> "DO" 
  | UNTIL  -> "UNTIL" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | DEFAULT  -> "DEFAULT" 
  | IN  -> "IN" 
  | CSTBOOL _ -> "CSTBOOL" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | QUE  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | BOOL  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | INC  -> (null : System.Object) 
  | DECR  -> (null : System.Object) 
  | SELFPLUS  -> (null : System.Object) 
  | SELFMINUS  -> (null : System.Object) 
  | SELFTIMES  -> (null : System.Object) 
  | SELFDIV  -> (null : System.Object) 
  | SELFMOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | DOWHILE  -> (null : System.Object) 
  | DOUNTIL  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 9us; 4us; 9us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 17us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 70us; 63us; 71us; 63us; 73us; 63us; 74us; 63us; 82us; 63us; 83us; 63us; 85us; 63us; 104us; 63us; 112us; 63us; 232us; 63us; 235us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 71us; 122us; 15us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 70us; 72us; 71us; 55us; 73us; 75us; 74us; 75us; 82us; 84us; 83us; 84us; 85us; 86us; 104us; 105us; 112us; 113us; 232us; 233us; 235us; 236us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 71us; 56us; 74us; 121us; 83us; 123us; 59us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 66us; 69us; 67us; 68us; 70us; 57us; 71us; 57us; 73us; 57us; 74us; 57us; 78us; 81us; 79us; 80us; 82us; 57us; 83us; 57us; 85us; 57us; 88us; 89us; 93us; 94us; 98us; 99us; 100us; 101us; 102us; 103us; 104us; 57us; 108us; 109us; 110us; 111us; 112us; 57us; 115us; 116us; 129us; 130us; 132us; 163us; 135us; 136us; 137us; 138us; 164us; 140us; 165us; 141us; 166us; 142us; 167us; 143us; 168us; 144us; 169us; 145us; 170us; 146us; 171us; 147us; 172us; 148us; 173us; 149us; 174us; 150us; 175us; 151us; 176us; 152us; 183us; 153us; 184us; 154us; 185us; 155us; 186us; 156us; 187us; 157us; 188us; 158us; 189us; 160us; 190us; 159us; 192us; 161us; 201us; 159us; 202us; 159us; 213us; 162us; 216us; 163us; 232us; 57us; 235us; 57us; 59us; 65535us; 16us; 126us; 43us; 126us; 46us; 126us; 49us; 126us; 52us; 126us; 59us; 126us; 66us; 126us; 67us; 126us; 70us; 126us; 71us; 126us; 73us; 126us; 74us; 126us; 78us; 126us; 79us; 126us; 82us; 126us; 83us; 126us; 85us; 126us; 88us; 126us; 93us; 126us; 98us; 126us; 100us; 126us; 102us; 126us; 104us; 126us; 108us; 126us; 110us; 126us; 112us; 126us; 115us; 126us; 129us; 126us; 132us; 126us; 135us; 126us; 137us; 126us; 164us; 126us; 165us; 126us; 166us; 126us; 167us; 126us; 168us; 126us; 169us; 126us; 170us; 126us; 171us; 126us; 172us; 126us; 173us; 126us; 174us; 126us; 175us; 126us; 176us; 126us; 183us; 126us; 184us; 126us; 185us; 126us; 186us; 126us; 187us; 126us; 188us; 126us; 189us; 126us; 190us; 127us; 192us; 126us; 201us; 127us; 202us; 127us; 213us; 126us; 216us; 126us; 232us; 126us; 235us; 126us; 61us; 65535us; 16us; 128us; 43us; 128us; 46us; 128us; 49us; 128us; 52us; 128us; 59us; 128us; 66us; 128us; 67us; 128us; 70us; 128us; 71us; 128us; 73us; 128us; 74us; 128us; 78us; 128us; 79us; 128us; 82us; 128us; 83us; 128us; 85us; 128us; 88us; 128us; 93us; 128us; 98us; 128us; 100us; 128us; 102us; 128us; 104us; 128us; 108us; 128us; 110us; 128us; 112us; 128us; 115us; 128us; 129us; 128us; 132us; 128us; 135us; 128us; 137us; 128us; 164us; 128us; 165us; 128us; 166us; 128us; 167us; 128us; 168us; 128us; 169us; 128us; 170us; 128us; 171us; 128us; 172us; 128us; 173us; 128us; 174us; 128us; 175us; 128us; 176us; 128us; 183us; 128us; 184us; 128us; 185us; 128us; 186us; 128us; 187us; 128us; 188us; 128us; 189us; 128us; 190us; 128us; 192us; 128us; 201us; 128us; 202us; 128us; 210us; 212us; 213us; 128us; 216us; 128us; 230us; 231us; 232us; 128us; 235us; 128us; 66us; 65535us; 16us; 125us; 43us; 125us; 46us; 125us; 49us; 125us; 52us; 125us; 59us; 125us; 66us; 125us; 67us; 125us; 70us; 125us; 71us; 125us; 73us; 125us; 74us; 125us; 78us; 125us; 79us; 125us; 82us; 125us; 83us; 125us; 85us; 125us; 88us; 125us; 93us; 125us; 97us; 106us; 98us; 124us; 100us; 125us; 102us; 125us; 104us; 125us; 108us; 125us; 110us; 125us; 112us; 125us; 115us; 125us; 129us; 125us; 132us; 125us; 135us; 125us; 137us; 125us; 164us; 125us; 165us; 125us; 166us; 125us; 167us; 125us; 168us; 125us; 169us; 125us; 170us; 125us; 171us; 125us; 172us; 125us; 173us; 125us; 174us; 125us; 175us; 125us; 176us; 125us; 177us; 178us; 180us; 181us; 183us; 125us; 184us; 125us; 185us; 125us; 186us; 125us; 187us; 125us; 188us; 125us; 189us; 125us; 190us; 124us; 192us; 125us; 194us; 195us; 201us; 125us; 202us; 124us; 204us; 205us; 207us; 208us; 210us; 211us; 213us; 125us; 216us; 125us; 232us; 125us; 235us; 125us; 1us; 65535us; 132us; 133us; 2us; 65535us; 132us; 215us; 216us; 217us; 61us; 65535us; 16us; 197us; 43us; 197us; 46us; 197us; 49us; 197us; 52us; 197us; 59us; 197us; 66us; 197us; 67us; 197us; 70us; 197us; 71us; 197us; 73us; 197us; 74us; 197us; 78us; 197us; 79us; 197us; 82us; 197us; 83us; 197us; 85us; 197us; 88us; 197us; 93us; 197us; 98us; 197us; 100us; 197us; 102us; 197us; 104us; 197us; 108us; 197us; 110us; 197us; 112us; 197us; 115us; 197us; 129us; 197us; 132us; 197us; 135us; 197us; 137us; 197us; 164us; 197us; 165us; 197us; 166us; 197us; 167us; 197us; 168us; 197us; 169us; 197us; 170us; 197us; 171us; 197us; 172us; 197us; 173us; 197us; 174us; 197us; 175us; 197us; 176us; 197us; 183us; 197us; 184us; 197us; 185us; 197us; 186us; 197us; 187us; 197us; 188us; 197us; 189us; 197us; 190us; 197us; 192us; 197us; 201us; 197us; 202us; 197us; 210us; 197us; 213us; 197us; 216us; 197us; 230us; 197us; 232us; 197us; 235us; 197us; 61us; 65535us; 16us; 199us; 43us; 199us; 46us; 199us; 49us; 199us; 52us; 199us; 59us; 199us; 66us; 199us; 67us; 199us; 70us; 199us; 71us; 199us; 73us; 199us; 74us; 199us; 78us; 199us; 79us; 199us; 82us; 199us; 83us; 199us; 85us; 199us; 88us; 199us; 93us; 199us; 98us; 199us; 100us; 199us; 102us; 199us; 104us; 199us; 108us; 199us; 110us; 199us; 112us; 199us; 115us; 199us; 129us; 199us; 132us; 199us; 135us; 199us; 137us; 199us; 164us; 199us; 165us; 199us; 166us; 199us; 167us; 199us; 168us; 199us; 169us; 199us; 170us; 199us; 171us; 199us; 172us; 199us; 173us; 199us; 174us; 199us; 175us; 199us; 176us; 199us; 183us; 199us; 184us; 199us; 185us; 199us; 186us; 199us; 187us; 199us; 188us; 199us; 189us; 199us; 190us; 199us; 192us; 199us; 201us; 199us; 202us; 199us; 210us; 199us; 213us; 199us; 216us; 199us; 230us; 199us; 232us; 199us; 235us; 199us; 61us; 65535us; 16us; 198us; 43us; 198us; 46us; 198us; 49us; 198us; 52us; 198us; 59us; 198us; 66us; 198us; 67us; 198us; 70us; 198us; 71us; 198us; 73us; 198us; 74us; 198us; 78us; 198us; 79us; 198us; 82us; 198us; 83us; 198us; 85us; 198us; 88us; 198us; 93us; 198us; 98us; 198us; 100us; 198us; 102us; 198us; 104us; 198us; 108us; 198us; 110us; 198us; 112us; 198us; 115us; 198us; 129us; 198us; 132us; 198us; 135us; 198us; 137us; 198us; 164us; 198us; 165us; 198us; 166us; 198us; 167us; 198us; 168us; 198us; 169us; 198us; 170us; 198us; 171us; 198us; 172us; 198us; 173us; 198us; 174us; 198us; 175us; 198us; 176us; 198us; 183us; 198us; 184us; 198us; 185us; 198us; 186us; 198us; 187us; 198us; 188us; 198us; 189us; 198us; 190us; 198us; 192us; 198us; 201us; 198us; 202us; 198us; 210us; 198us; 213us; 198us; 216us; 198us; 230us; 198us; 232us; 198us; 235us; 198us; 61us; 65535us; 16us; 200us; 43us; 200us; 46us; 200us; 49us; 200us; 52us; 200us; 59us; 200us; 66us; 200us; 67us; 200us; 70us; 200us; 71us; 200us; 73us; 200us; 74us; 200us; 78us; 200us; 79us; 200us; 82us; 200us; 83us; 200us; 85us; 200us; 88us; 200us; 93us; 200us; 98us; 200us; 100us; 200us; 102us; 200us; 104us; 200us; 108us; 200us; 110us; 200us; 112us; 200us; 115us; 200us; 129us; 200us; 132us; 200us; 135us; 200us; 137us; 200us; 164us; 200us; 165us; 200us; 166us; 200us; 167us; 200us; 168us; 200us; 169us; 200us; 170us; 200us; 171us; 200us; 172us; 200us; 173us; 200us; 174us; 200us; 175us; 200us; 176us; 200us; 183us; 200us; 184us; 200us; 185us; 200us; 186us; 200us; 187us; 200us; 188us; 200us; 189us; 200us; 190us; 200us; 192us; 200us; 201us; 200us; 202us; 200us; 210us; 200us; 213us; 200us; 216us; 200us; 230us; 200us; 232us; 200us; 235us; 200us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; 2us; 65535us; 118us; 119us; 233us; 237us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 60us; 65us; 71us; 87us; 95us; 155us; 215us; 277us; 344us; 346us; 349us; 411us; 473us; 535us; 597us; 607us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 15us; 8us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 31us; 38us; 1us; 26us; 15us; 27us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 15us; 29us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 1us; 29us; 1us; 30us; 1us; 31us; 3us; 31us; 38us; 39us; 1us; 31us; 3us; 31us; 38us; 39us; 17us; 31us; 38us; 39us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 15us; 31us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 1us; 31us; 3us; 31us; 38us; 39us; 1us; 31us; 1us; 31us; 2us; 31us; 38us; 1us; 31us; 1us; 32us; 2us; 32us; 40us; 1us; 32us; 2us; 32us; 40us; 16us; 32us; 40us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 15us; 32us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 1us; 32us; 2us; 32us; 40us; 1us; 32us; 2us; 33us; 34us; 2us; 33us; 34us; 1us; 33us; 1us; 33us; 15us; 33us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 15us; 34us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 1us; 34us; 1us; 34us; 2us; 35us; 36us; 2us; 35us; 81us; 15us; 35us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 1us; 35us; 15us; 35us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 1us; 35us; 15us; 35us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 1us; 35us; 1us; 35us; 2us; 36us; 84us; 1us; 36us; 1us; 36us; 15us; 36us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 1us; 36us; 15us; 36us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 15us; 37us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 11us; 41us; 44us; 62us; 64us; 65us; 66us; 67us; 68us; 69us; 81us; 84us; 10us; 41us; 44us; 62us; 64us; 65us; 66us; 67us; 68us; 69us; 84us; 1us; 42us; 2us; 42us; 78us; 1us; 43us; 1us; 44us; 15us; 44us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 2us; 45us; 80us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 15us; 46us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 2us; 47us; 72us; 15us; 47us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 2us; 48us; 73us; 15us; 49us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 15us; 49us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 15us; 49us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 65us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 66us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 67us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 68us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 69us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 70us; 71us; 14us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 71us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 72us; 15us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 84us; 16us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 70us; 71us; 87us; 88us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 60us; 1us; 61us; 2us; 61us; 84us; 1us; 62us; 1us; 63us; 2us; 63us; 84us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 3us; 72us; 78us; 81us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 73us; 2us; 73us; 84us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 1us; 78us; 2us; 78us; 81us; 1us; 78us; 1us; 79us; 2us; 79us; 84us; 1us; 80us; 1us; 81us; 2us; 81us; 84us; 1us; 81us; 2us; 82us; 83us; 2us; 82us; 84us; 1us; 83us; 1us; 84us; 1us; 84us; 1us; 86us; 1us; 88us; 1us; 88us; 1us; 89us; 2us; 90us; 93us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 99us; 2us; 100us; 102us; 2us; 100us; 102us; 2us; 100us; 102us; 2us; 100us; 102us; 1us; 101us; 1us; 101us; 1us; 101us; 1us; 102us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 58us; 60us; 63us; 65us; 69us; 71us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 108us; 111us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 143us; 145us; 161us; 163us; 166us; 168us; 184us; 186us; 188us; 190us; 194us; 196us; 200us; 218us; 234us; 236us; 240us; 242us; 244us; 247us; 249us; 251us; 254us; 256us; 259us; 276us; 292us; 294us; 297us; 299us; 302us; 305us; 307us; 309us; 325us; 327us; 329us; 331us; 333us; 349us; 351us; 353us; 356us; 359us; 375us; 377us; 393us; 395us; 411us; 413us; 415us; 418us; 420us; 422us; 438us; 440us; 456us; 458us; 460us; 462us; 464us; 480us; 482us; 484us; 486us; 488us; 490us; 492us; 494us; 506us; 517us; 519us; 522us; 524us; 526us; 542us; 545us; 547us; 549us; 551us; 553us; 569us; 572us; 588us; 591us; 607us; 623us; 639us; 655us; 671us; 687us; 703us; 719us; 735us; 751us; 767us; 783us; 799us; 815us; 831us; 847us; 863us; 879us; 895us; 910us; 926us; 942us; 958us; 975us; 977us; 979us; 981us; 983us; 985us; 987us; 989us; 991us; 993us; 995us; 997us; 999us; 1001us; 1003us; 1006us; 1008us; 1010us; 1013us; 1015us; 1017us; 1019us; 1021us; 1023us; 1025us; 1027us; 1029us; 1033us; 1035us; 1037us; 1039us; 1041us; 1044us; 1046us; 1048us; 1050us; 1052us; 1054us; 1056us; 1059us; 1061us; 1063us; 1066us; 1068us; 1070us; 1073us; 1075us; 1078us; 1081us; 1083us; 1085us; 1087us; 1089us; 1091us; 1093us; 1095us; 1098us; 1100us; 1102us; 1104us; 1106us; 1108us; 1110us; 1112us; 1114us; 1116us; 1118us; 1121us; 1124us; 1127us; 1130us; 1132us; 1134us; 1136us; |]
let _fsyacc_action_rows = 238
let _fsyacc_actionTableElements = [|5us; 16386us; 22us; 229us; 35us; 227us; 38us; 226us; 39us; 228us; 44us; 29us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 5us; 16386us; 22us; 229us; 35us; 227us; 38us; 226us; 39us; 228us; 44us; 29us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 7us; 10us; 0us; 16390us; 3us; 32768us; 1us; 22us; 25us; 20us; 59us; 18us; 3us; 32768us; 1us; 22us; 25us; 20us; 59us; 18us; 3us; 32768us; 1us; 22us; 25us; 20us; 59us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 14us; 16392us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 25us; 20us; 59us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 25us; 20us; 59us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 60us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 59us; 30us; 1us; 32768us; 1us; 31us; 4us; 16400us; 22us; 229us; 35us; 227us; 38us; 226us; 39us; 228us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 4us; 16400us; 22us; 229us; 35us; 227us; 38us; 226us; 39us; 228us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 4us; 32768us; 22us; 229us; 35us; 227us; 38us; 226us; 39us; 228us; 0us; 16403us; 26us; 16405us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 22us; 229us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 35us; 227us; 37us; 65us; 38us; 226us; 39us; 228us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 77us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 1us; 32768us; 4us; 45us; 0us; 16404us; 26us; 16405us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 22us; 229us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 35us; 227us; 37us; 65us; 38us; 226us; 39us; 228us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 77us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16406us; 1us; 32768us; 7us; 49us; 26us; 16405us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 22us; 229us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 35us; 227us; 37us; 65us; 38us; 226us; 39us; 228us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 77us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16407us; 1us; 32768us; 7us; 52us; 26us; 16405us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 22us; 229us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 35us; 227us; 37us; 65us; 38us; 226us; 39us; 228us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 77us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 36us; 74us; 0us; 16410us; 15us; 32768us; 7us; 58us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 0us; 16411us; 16us; 32768us; 1us; 202us; 7us; 60us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16412us; 15us; 32768us; 7us; 62us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 66us; 1us; 32768us; 1us; 67us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 2us; 71us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 15us; 32768us; 2us; 70us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 22us; 32768us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 37us; 64us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 76us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 22us; 32768us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 37us; 65us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 77us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 1us; 32768us; 36us; 73us; 22us; 32768us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 37us; 64us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 76us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 22us; 32768us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 37us; 65us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 77us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16415us; 1us; 32768us; 1us; 78us; 1us; 32768us; 1us; 79us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 2us; 83us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 15us; 32768us; 2us; 82us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 22us; 32768us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 37us; 64us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 76us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 22us; 32768us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 37us; 65us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 77us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16416us; 22us; 32768us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 37us; 64us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 76us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 2us; 32768us; 45us; 87us; 50us; 92us; 1us; 32768us; 1us; 88us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 2us; 90us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 1us; 32768us; 7us; 91us; 0us; 16417us; 1us; 32768us; 1us; 93us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 2us; 95us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 1us; 32768us; 7us; 96us; 0us; 16418us; 3us; 32768us; 1us; 98us; 25us; 210us; 59us; 206us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 7us; 100us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 7us; 102us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 2us; 104us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 22us; 32768us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 37us; 64us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 76us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16419us; 2us; 32768us; 5us; 213us; 54us; 107us; 1us; 32768us; 1us; 108us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 8us; 110us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 2us; 112us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 22us; 32768us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 37us; 64us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 76us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16420us; 1us; 32768us; 1us; 115us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 2us; 117us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 1us; 32768us; 3us; 118us; 2us; 32768us; 52us; 230us; 53us; 234us; 1us; 32768us; 4us; 120us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 0us; 16424us; 10us; 16425us; 2us; 209us; 5us; 213us; 9us; 129us; 28us; 179us; 29us; 182us; 30us; 183us; 31us; 184us; 32us; 185us; 33us; 186us; 34us; 187us; 9us; 16425us; 5us; 213us; 9us; 129us; 28us; 179us; 29us; 182us; 30us; 183us; 31us; 184us; 32us; 185us; 33us; 186us; 34us; 187us; 0us; 16426us; 1us; 16426us; 2us; 203us; 0us; 16427us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 14us; 16428us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 1us; 16464us; 1us; 132us; 15us; 16469us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 1us; 32768us; 2us; 134us; 0us; 16429us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16430us; 15us; 32768us; 1us; 190us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 14us; 16431us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 1us; 16432us; 1us; 194us; 3us; 16433us; 25us; 166us; 26us; 167us; 27us; 168us; 3us; 16434us; 25us; 166us; 26us; 167us; 27us; 168us; 0us; 16435us; 0us; 16436us; 0us; 16437us; 9us; 16438us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 9us; 16439us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 9us; 16440us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 9us; 16441us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 9us; 16442us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 9us; 16443us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 15us; 32768us; 11us; 175us; 12us; 176us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 14us; 16444us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 3us; 16449us; 25us; 166us; 26us; 167us; 27us; 168us; 3us; 16450us; 25us; 166us; 26us; 167us; 27us; 168us; 3us; 16451us; 25us; 166us; 26us; 167us; 27us; 168us; 3us; 16452us; 25us; 166us; 26us; 167us; 27us; 168us; 3us; 16453us; 25us; 166us; 26us; 167us; 27us; 168us; 11us; 16454us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 14us; 32768us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 12us; 16455us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 15us; 32768us; 2us; 193us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 15us; 32768us; 6us; 214us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 15us; 16471us; 8us; 216us; 11us; 175us; 14us; 189us; 15us; 188us; 16us; 169us; 17us; 170us; 18us; 171us; 19us; 172us; 20us; 173us; 21us; 174us; 23us; 164us; 24us; 165us; 25us; 166us; 26us; 167us; 27us; 168us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 3us; 32768us; 1us; 207us; 25us; 210us; 59us; 206us; 1us; 16445us; 5us; 213us; 0us; 16446us; 3us; 32768us; 1us; 207us; 25us; 210us; 59us; 206us; 1us; 16447us; 5us; 213us; 0us; 16448us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 16us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 58us; 191us; 59us; 131us; 60us; 218us; 1us; 32768us; 8us; 192us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16456us; 3us; 32768us; 1us; 207us; 25us; 210us; 59us; 206us; 2us; 32768us; 2us; 196us; 5us; 213us; 0us; 16457us; 0us; 16458us; 0us; 16459us; 0us; 16460us; 0us; 16461us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16462us; 3us; 32768us; 1us; 207us; 25us; 210us; 59us; 206us; 1us; 16463us; 5us; 213us; 0us; 16464us; 3us; 32768us; 1us; 207us; 25us; 210us; 59us; 206us; 2us; 32768us; 2us; 209us; 5us; 213us; 0us; 16465us; 10us; 32768us; 1us; 202us; 10us; 204us; 24us; 219us; 25us; 210us; 40us; 221us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 206us; 60us; 218us; 1us; 16466us; 5us; 213us; 0us; 16467us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16468us; 0us; 16470us; 15us; 32768us; 1us; 202us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 40us; 221us; 41us; 137us; 42us; 139us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16472us; 0us; 16473us; 2us; 32768us; 56us; 223us; 60us; 220us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 0us; 16482us; 0us; 16483us; 8us; 32768us; 1us; 201us; 10us; 204us; 24us; 219us; 40us; 221us; 55us; 225us; 56us; 222us; 57us; 224us; 60us; 218us; 1us; 32768us; 12us; 232us; 22us; 32768us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 37us; 64us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 76us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 2us; 16484us; 52us; 230us; 53us; 234us; 1us; 32768us; 12us; 235us; 22us; 32768us; 1us; 202us; 3us; 43us; 10us; 204us; 13us; 135us; 24us; 219us; 25us; 210us; 28us; 177us; 29us; 180us; 37us; 64us; 40us; 221us; 41us; 137us; 42us; 139us; 43us; 59us; 45us; 76us; 46us; 97us; 49us; 85us; 51us; 114us; 55us; 225us; 56us; 222us; 57us; 224us; 59us; 131us; 60us; 218us; 0us; 16485us; 0us; 16486us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 6us; 7us; 9us; 10us; 16us; 17us; 19us; 20us; 21us; 23us; 24us; 28us; 32us; 36us; 39us; 41us; 57us; 72us; 73us; 75us; 79us; 81us; 85us; 88us; 89us; 92us; 93us; 95us; 96us; 98us; 100us; 105us; 107us; 109us; 110us; 115us; 117us; 119us; 120us; 121us; 123us; 128us; 129us; 156us; 158us; 159us; 186us; 187us; 189us; 216us; 217us; 219us; 246us; 247us; 248us; 250us; 251us; 267us; 268us; 285us; 286us; 302us; 303us; 304us; 306us; 308us; 324us; 340us; 356us; 372us; 395us; 418us; 420us; 443us; 466us; 467us; 469us; 471us; 487us; 503us; 519us; 535us; 558us; 581us; 582us; 605us; 608us; 610us; 626us; 642us; 644us; 645us; 647us; 663us; 679us; 681us; 682us; 686us; 702us; 718us; 734us; 750us; 766us; 782us; 805us; 806us; 809us; 811us; 827us; 843us; 859us; 875us; 898us; 899us; 901us; 917us; 933us; 935us; 938us; 940us; 941us; 942us; 943us; 944us; 955us; 965us; 966us; 968us; 969us; 985us; 1000us; 1002us; 1018us; 1020us; 1021us; 1037us; 1038us; 1054us; 1069us; 1071us; 1075us; 1079us; 1080us; 1081us; 1082us; 1092us; 1102us; 1112us; 1122us; 1132us; 1142us; 1158us; 1173us; 1177us; 1181us; 1185us; 1189us; 1193us; 1205us; 1220us; 1233us; 1249us; 1265us; 1281us; 1297us; 1313us; 1329us; 1345us; 1361us; 1377us; 1393us; 1409us; 1425us; 1441us; 1457us; 1473us; 1489us; 1493us; 1495us; 1496us; 1500us; 1502us; 1503us; 1519us; 1535us; 1551us; 1567us; 1583us; 1599us; 1615us; 1632us; 1634us; 1650us; 1651us; 1655us; 1658us; 1659us; 1660us; 1661us; 1662us; 1663us; 1679us; 1695us; 1696us; 1700us; 1702us; 1703us; 1707us; 1710us; 1711us; 1722us; 1724us; 1725us; 1741us; 1742us; 1743us; 1759us; 1760us; 1761us; 1764us; 1765us; 1766us; 1767us; 1768us; 1769us; 1770us; 1771us; 1772us; 1773us; 1774us; 1783us; 1785us; 1808us; 1811us; 1813us; 1836us; 1837us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 7us; 7us; 9us; 9us; 7us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 6us; 4us; 1us; 1us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 3us; 5us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 21us; 21us; 22us; 22us; 23us; 24us; 25us; 25us; 25us; 25us; 26us; 26us; 26us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16421us; 16422us; 16423us; 16424us; 65535us; 65535us; 16426us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16446us; 65535us; 65535us; 16448us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16456us; 65535us; 65535us; 16457us; 16458us; 16459us; 16460us; 16461us; 65535us; 65535us; 16462us; 65535us; 65535us; 16464us; 65535us; 65535us; 16465us; 65535us; 65535us; 16467us; 65535us; 16468us; 16470us; 65535us; 16472us; 16473us; 65535us; 16474us; 16475us; 16476us; 16477us; 16478us; 16479us; 16480us; 16481us; 16482us; 16483us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16485us; 16486us; |]
let _fsyacc_reductions ()  =    [| 
# 571 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 580 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "CPar.fsy"
                                                               Prog _1 
                   )
# 54 "CPar.fsy"
                 : Absyn.program));
# 591 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "CPar.fsy"
                                                               [] 
                   )
# 59 "CPar.fsy"
                 : 'gentype_Topdecs));
# 601 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 60 "CPar.fsy"
                 : 'gentype_Topdecs));
# 613 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 64 "CPar.fsy"
                 : 'gentype_Topdec));
# 624 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "CPar.fsy"
                                                               _1 
                   )
# 65 "CPar.fsy"
                 : 'gentype_Topdec));
# 635 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VariableDeclareAndAssign in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "CPar.fsy"
                                                               VariableDeclareAndAssign(first _1, second _1 , third _1)  
                   )
# 66 "CPar.fsy"
                 : 'gentype_Topdec));
# 646 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 84 "CPar.fsy"
                 : 'gentype_Vardec));
# 658 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "CPar.fsy"
                                                        ((fst _2) _1, snd _2 , _4) 
                   )
# 93 "CPar.fsy"
                 : 'gentype_VariableDeclareAndAssign));
# 671 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 99 "CPar.fsy"
                 : 'gentype_Vardesc));
# 682 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 107 "CPar.fsy"
                 : 'gentype_Vardesc));
# 693 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "CPar.fsy"
                                                               _2                                      
                   )
# 109 "CPar.fsy"
                 : 'gentype_Vardesc));
# 704 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 111 "CPar.fsy"
                 : 'gentype_Vardesc));
# 715 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Vardesc));
# 727 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 118 "CPar.fsy"
                 : 'gentype_Fundec));
# 740 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 120 "CPar.fsy"
                 : 'gentype_Fundec));
# 754 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               [] 
                   )
# 125 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 764 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               _1 
                   )
# 126 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 775 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               [_1]     
                   )
# 130 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 786 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 131 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 798 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Block _2 
                   )
# 136 "CPar.fsy"
                 : 'gentype_Block));
# 809 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               [] 
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 819 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 831 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 843 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VariableDeclareAndAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                                      DeclareAndAssign(first _1, second _1 , third _1) :: _3 
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 855 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               _1 
                   )
# 147 "CPar.fsy"
                 : 'gentype_Stmt));
# 866 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               _1 
                   )
# 148 "CPar.fsy"
                 : 'gentype_Stmt));
# 877 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 888 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               Return None          
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 898 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 909 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               _1                   
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtM));
# 920 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 933 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtM));
# 945 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtM));
# 957 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               DoUntil(_2, _5)      
                   )
# 159 "CPar.fsy"
                 : 'gentype_StmtM));
# 969 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                                            For(_3,_5,_7,_9)  
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtM));
# 983 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                                            Forin(_2,_5,_7,_9)   
                   )
# 161 "CPar.fsy"
                 : 'gentype_StmtM));
# 997 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                                               Switch(_3,_6)  
                   )
# 162 "CPar.fsy"
                 : 'gentype_StmtM));
# 1009 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 166 "CPar.fsy"
                 : 'gentype_StmtU));
# 1022 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 167 "CPar.fsy"
                 : 'gentype_StmtU));
# 1034 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 168 "CPar.fsy"
                 : 'gentype_StmtU));
# 1046 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Access _1           
                   )
# 172 "CPar.fsy"
                 : 'gentype_Expr));
# 1057 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               _1                  
                   )
# 173 "CPar.fsy"
                 : 'gentype_Expr));
# 1068 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               _1                  
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1079 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1091 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1103 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1114 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1125 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1135 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1147 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1159 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1171 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1183 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1195 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1207 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1219 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1231 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1243 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1255 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1267 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Prim3(_1,_3,_5)     
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1280 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Self(_2,"+B",CstI 1) 
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1291 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Self(_1,"+",CstI 1) 
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1302 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Self(_2,"-B",CstI 1) 
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1313 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Self(_1,"-",CstI 1) 
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1324 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Self(_1,"+",_3)     
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1336 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Self(_1,"-",_3)     
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1348 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               Self(_1,"*",_3)     
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1360 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               Self(_1,"/",_3)     
                   )
# 202 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1372 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               Self(_1,"%",_3)     
                   )
# 203 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1384 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 204 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1396 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 205 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1408 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               Print(_3, _5)       
                   )
# 206 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1420 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               Println(_3)         
                   )
# 207 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1431 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               CstI _1             
                   )
# 215 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1442 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstChar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               ConstChar(_1)       
                   )
# 216 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1453 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               ConstFloat(_1)      
                   )
# 217 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1464 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstBool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               ConstBool(_1)       
                   )
# 218 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1475 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               _2                  
                   )
# 219 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1486 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               Addr _2             
                   )
# 220 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1497 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               AccVar _1           
                   )
# 224 "CPar.fsy"
                 : 'gentype_Access));
# 1508 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                               _2                  
                   )
# 225 "CPar.fsy"
                 : 'gentype_Access));
# 1519 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 226 "CPar.fsy"
                 : 'gentype_Access));
# 1530 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 227 "CPar.fsy"
                 : 'gentype_Access));
# 1541 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 228 "CPar.fsy"
                 : 'gentype_Access));
# 1553 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               []       
                   )
# 232 "CPar.fsy"
                 : 'gentype_Exprs));
# 1563 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "CPar.fsy"
                                                               _1       
                   )
# 233 "CPar.fsy"
                 : 'gentype_Exprs));
# 1574 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                               [_1]     
                   )
# 237 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1585 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 238 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1597 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "CPar.fsy"
                                                               _1       
                   )
# 242 "CPar.fsy"
                 : 'gentype_Const));
# 1608 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "CPar.fsy"
                                                               - _2     
                   )
# 243 "CPar.fsy"
                 : 'gentype_Const));
# 1619 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "CPar.fsy"
                                                               -1       
                   )
# 244 "CPar.fsy"
                 : 'gentype_Const));
# 1629 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "CPar.fsy"
                                                               _1       
                   )
# 248 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1640 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "CPar.fsy"
                                                               - _2     
                   )
# 249 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1651 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "CPar.fsy"
                                                                 _1       
                   )
# 253 "CPar.fsy"
                 : 'gentype_ConstChar));
# 1662 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> bool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CPar.fsy"
                                                               _1       
                   )
# 257 "CPar.fsy"
                 : 'gentype_ConstBool));
# 1673 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "CPar.fsy"
                                                               TypI     
                   )
# 261 "CPar.fsy"
                 : 'gentype_Type));
# 1683 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 "CPar.fsy"
                                                               TypC     
                   )
# 262 "CPar.fsy"
                 : 'gentype_Type));
# 1693 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 263 "CPar.fsy"
                                                               TypF     
                   )
# 263 "CPar.fsy"
                 : 'gentype_Type));
# 1703 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 "CPar.fsy"
                                                               TypB     
                   )
# 264 "CPar.fsy"
                 : 'gentype_Type));
# 1713 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 "CPar.fsy"
                                                                          [Case(_2,_4)]    
                   )
# 268 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1725 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 "CPar.fsy"
                                                                          [Default(_3)]    
                   )
# 269 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1736 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 270 "CPar.fsy"
                                                                          Case(_2,_4) :: _5
                   )
# 270 "CPar.fsy"
                 : 'gentype_StmtCase));
|]
# 1750 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 64;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
