// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | QUE
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | INC
  | DECR
  | SELFPLUS
  | SELFMINUS
  | SELFTIMES
  | SELFDIV
  | SELFMOD
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | DOWHILE
  | DOUNTIL
  | DO
  | UNTIL
  | SWITCH
  | CASE
  | DEFAULT
  | IN
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_QUE
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_INC
    | TOKEN_DECR
    | TOKEN_SELFPLUS
    | TOKEN_SELFMINUS
    | TOKEN_SELFTIMES
    | TOKEN_SELFDIV
    | TOKEN_SELFMOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_DOWHILE
    | TOKEN_DOUNTIL
    | TOKEN_DO
    | TOKEN_UNTIL
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_DEFAULT
    | TOKEN_IN
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type
    | NONTERM_StmtCase

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | QUE  -> 11 
  | COLON  -> 12 
  | NOT  -> 13 
  | SEQOR  -> 14 
  | SEQAND  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | PLUS  -> 22 
  | MINUS  -> 23 
  | TIMES  -> 24 
  | DIV  -> 25 
  | MOD  -> 26 
  | INC  -> 27 
  | DECR  -> 28 
  | SELFPLUS  -> 29 
  | SELFMINUS  -> 30 
  | SELFTIMES  -> 31 
  | SELFDIV  -> 32 
  | SELFMOD  -> 33 
  | CHAR  -> 34 
  | ELSE  -> 35 
  | IF  -> 36 
  | INT  -> 37 
  | NULL  -> 38 
  | PRINT  -> 39 
  | PRINTLN  -> 40 
  | RETURN  -> 41 
  | VOID  -> 42 
  | WHILE  -> 43 
  | FOR  -> 44 
  | DOWHILE  -> 45 
  | DOUNTIL  -> 46 
  | DO  -> 47 
  | UNTIL  -> 48 
  | SWITCH  -> 49 
  | CASE  -> 50 
  | DEFAULT  -> 51 
  | IN  -> 52 
  | CSTSTRING _ -> 53 
  | NAME _ -> 54 
  | CSTINT _ -> 55 
  | CSTBOOL _ -> 56 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_QUE 
  | 12 -> TOKEN_COLON 
  | 13 -> TOKEN_NOT 
  | 14 -> TOKEN_SEQOR 
  | 15 -> TOKEN_SEQAND 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_PLUS 
  | 23 -> TOKEN_MINUS 
  | 24 -> TOKEN_TIMES 
  | 25 -> TOKEN_DIV 
  | 26 -> TOKEN_MOD 
  | 27 -> TOKEN_INC 
  | 28 -> TOKEN_DECR 
  | 29 -> TOKEN_SELFPLUS 
  | 30 -> TOKEN_SELFMINUS 
  | 31 -> TOKEN_SELFTIMES 
  | 32 -> TOKEN_SELFDIV 
  | 33 -> TOKEN_SELFMOD 
  | 34 -> TOKEN_CHAR 
  | 35 -> TOKEN_ELSE 
  | 36 -> TOKEN_IF 
  | 37 -> TOKEN_INT 
  | 38 -> TOKEN_NULL 
  | 39 -> TOKEN_PRINT 
  | 40 -> TOKEN_PRINTLN 
  | 41 -> TOKEN_RETURN 
  | 42 -> TOKEN_VOID 
  | 43 -> TOKEN_WHILE 
  | 44 -> TOKEN_FOR 
  | 45 -> TOKEN_DOWHILE 
  | 46 -> TOKEN_DOUNTIL 
  | 47 -> TOKEN_DO 
  | 48 -> TOKEN_UNTIL 
  | 49 -> TOKEN_SWITCH 
  | 50 -> TOKEN_CASE 
  | 51 -> TOKEN_DEFAULT 
  | 52 -> TOKEN_IN 
  | 53 -> TOKEN_CSTSTRING 
  | 54 -> TOKEN_NAME 
  | 55 -> TOKEN_CSTINT 
  | 56 -> TOKEN_CSTBOOL 
  | 59 -> TOKEN_end_of_input
  | 57 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtU 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_Expr 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_AtExprNotAccess 
    | 72 -> NONTERM_AtExprNotAccess 
    | 73 -> NONTERM_AtExprNotAccess 
    | 74 -> NONTERM_Access 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Access 
    | 77 -> NONTERM_Access 
    | 78 -> NONTERM_Access 
    | 79 -> NONTERM_Exprs 
    | 80 -> NONTERM_Exprs 
    | 81 -> NONTERM_Exprs1 
    | 82 -> NONTERM_Exprs1 
    | 83 -> NONTERM_Const 
    | 84 -> NONTERM_Const 
    | 85 -> NONTERM_Const 
    | 86 -> NONTERM_Const 
    | 87 -> NONTERM_Type 
    | 88 -> NONTERM_Type 
    | 89 -> NONTERM_StmtCase 
    | 90 -> NONTERM_StmtCase 
    | 91 -> NONTERM_StmtCase 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 59 
let _fsyacc_tagOfErrorTerminal = 57

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | QUE  -> "QUE" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | INC  -> "INC" 
  | DECR  -> "DECR" 
  | SELFPLUS  -> "SELFPLUS" 
  | SELFMINUS  -> "SELFMINUS" 
  | SELFTIMES  -> "SELFTIMES" 
  | SELFDIV  -> "SELFDIV" 
  | SELFMOD  -> "SELFMOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | DOWHILE  -> "DOWHILE" 
  | DOUNTIL  -> "DOUNTIL" 
  | DO  -> "DO" 
  | UNTIL  -> "UNTIL" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | DEFAULT  -> "DEFAULT" 
  | IN  -> "IN" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | QUE  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | INC  -> (null : System.Object) 
  | DECR  -> (null : System.Object) 
  | SELFPLUS  -> (null : System.Object) 
  | SELFMINUS  -> (null : System.Object) 
  | SELFTIMES  -> (null : System.Object) 
  | SELFDIV  -> (null : System.Object) 
  | SELFMOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | DOWHILE  -> (null : System.Object) 
  | DOUNTIL  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 16us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 61us; 54us; 62us; 54us; 64us; 54us; 65us; 54us; 73us; 54us; 74us; 54us; 76us; 54us; 95us; 54us; 103us; 54us; 215us; 54us; 218us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 4us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 62us; 113us; 14us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 61us; 63us; 62us; 46us; 64us; 66us; 65us; 66us; 73us; 75us; 74us; 75us; 76us; 77us; 95us; 96us; 103us; 104us; 215us; 216us; 218us; 219us; 6us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 62us; 47us; 65us; 112us; 74us; 114us; 57us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 57us; 60us; 58us; 59us; 61us; 48us; 62us; 48us; 64us; 48us; 65us; 48us; 69us; 72us; 70us; 71us; 73us; 48us; 74us; 48us; 76us; 48us; 79us; 80us; 84us; 85us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 48us; 99us; 100us; 101us; 102us; 103us; 48us; 106us; 107us; 120us; 121us; 123us; 154us; 126us; 127us; 128us; 129us; 155us; 131us; 156us; 132us; 157us; 133us; 158us; 134us; 159us; 135us; 160us; 136us; 161us; 137us; 162us; 138us; 163us; 139us; 164us; 140us; 165us; 141us; 166us; 142us; 167us; 143us; 174us; 144us; 175us; 145us; 176us; 146us; 177us; 147us; 178us; 148us; 179us; 149us; 180us; 151us; 181us; 150us; 183us; 152us; 189us; 150us; 190us; 150us; 201us; 153us; 204us; 154us; 215us; 48us; 218us; 48us; 57us; 65535us; 37us; 117us; 40us; 117us; 43us; 117us; 50us; 117us; 57us; 117us; 58us; 117us; 61us; 117us; 62us; 117us; 64us; 117us; 65us; 117us; 69us; 117us; 70us; 117us; 73us; 117us; 74us; 117us; 76us; 117us; 79us; 117us; 84us; 117us; 89us; 117us; 91us; 117us; 93us; 117us; 95us; 117us; 99us; 117us; 101us; 117us; 103us; 117us; 106us; 117us; 120us; 117us; 123us; 117us; 126us; 117us; 128us; 117us; 155us; 117us; 156us; 117us; 157us; 117us; 158us; 117us; 159us; 117us; 160us; 117us; 161us; 117us; 162us; 117us; 163us; 117us; 164us; 117us; 165us; 117us; 166us; 117us; 167us; 117us; 174us; 117us; 175us; 117us; 176us; 117us; 177us; 117us; 178us; 117us; 179us; 117us; 180us; 117us; 181us; 118us; 183us; 117us; 189us; 118us; 190us; 118us; 201us; 117us; 204us; 117us; 215us; 117us; 218us; 117us; 59us; 65535us; 37us; 119us; 40us; 119us; 43us; 119us; 50us; 119us; 57us; 119us; 58us; 119us; 61us; 119us; 62us; 119us; 64us; 119us; 65us; 119us; 69us; 119us; 70us; 119us; 73us; 119us; 74us; 119us; 76us; 119us; 79us; 119us; 84us; 119us; 89us; 119us; 91us; 119us; 93us; 119us; 95us; 119us; 99us; 119us; 101us; 119us; 103us; 119us; 106us; 119us; 120us; 119us; 123us; 119us; 126us; 119us; 128us; 119us; 155us; 119us; 156us; 119us; 157us; 119us; 158us; 119us; 159us; 119us; 160us; 119us; 161us; 119us; 162us; 119us; 163us; 119us; 164us; 119us; 165us; 119us; 166us; 119us; 167us; 119us; 174us; 119us; 175us; 119us; 176us; 119us; 177us; 119us; 178us; 119us; 179us; 119us; 180us; 119us; 181us; 119us; 183us; 119us; 189us; 119us; 190us; 119us; 198us; 200us; 201us; 119us; 204us; 119us; 213us; 214us; 215us; 119us; 218us; 119us; 64us; 65535us; 37us; 116us; 40us; 116us; 43us; 116us; 50us; 116us; 57us; 116us; 58us; 116us; 61us; 116us; 62us; 116us; 64us; 116us; 65us; 116us; 69us; 116us; 70us; 116us; 73us; 116us; 74us; 116us; 76us; 116us; 79us; 116us; 84us; 116us; 88us; 97us; 89us; 115us; 91us; 116us; 93us; 116us; 95us; 116us; 99us; 116us; 101us; 116us; 103us; 116us; 106us; 116us; 120us; 116us; 123us; 116us; 126us; 116us; 128us; 116us; 155us; 116us; 156us; 116us; 157us; 116us; 158us; 116us; 159us; 116us; 160us; 116us; 161us; 116us; 162us; 116us; 163us; 116us; 164us; 116us; 165us; 116us; 166us; 116us; 167us; 116us; 168us; 169us; 171us; 172us; 174us; 116us; 175us; 116us; 176us; 116us; 177us; 116us; 178us; 116us; 179us; 116us; 180us; 116us; 181us; 115us; 183us; 116us; 185us; 186us; 189us; 116us; 190us; 115us; 192us; 193us; 195us; 196us; 198us; 199us; 201us; 116us; 204us; 116us; 215us; 116us; 218us; 116us; 1us; 65535us; 123us; 124us; 2us; 65535us; 123us; 203us; 204us; 205us; 59us; 65535us; 37us; 188us; 40us; 188us; 43us; 188us; 50us; 188us; 57us; 188us; 58us; 188us; 61us; 188us; 62us; 188us; 64us; 188us; 65us; 188us; 69us; 188us; 70us; 188us; 73us; 188us; 74us; 188us; 76us; 188us; 79us; 188us; 84us; 188us; 89us; 188us; 91us; 188us; 93us; 188us; 95us; 188us; 99us; 188us; 101us; 188us; 103us; 188us; 106us; 188us; 120us; 188us; 123us; 188us; 126us; 188us; 128us; 188us; 155us; 188us; 156us; 188us; 157us; 188us; 158us; 188us; 159us; 188us; 160us; 188us; 161us; 188us; 162us; 188us; 163us; 188us; 164us; 188us; 165us; 188us; 166us; 188us; 167us; 188us; 174us; 188us; 175us; 188us; 176us; 188us; 177us; 188us; 178us; 188us; 179us; 188us; 180us; 188us; 181us; 188us; 183us; 188us; 189us; 188us; 190us; 188us; 198us; 188us; 201us; 188us; 204us; 188us; 213us; 188us; 215us; 188us; 218us; 188us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; 2us; 65535us; 109us; 110us; 216us; 220us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 50us; 54us; 59us; 74us; 81us; 139us; 197us; 257us; 322us; 324us; 327us; 387us; 396us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 35us; 1us; 23us; 15us; 24us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 15us; 26us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 1us; 26us; 1us; 27us; 1us; 28us; 3us; 28us; 35us; 36us; 1us; 28us; 3us; 28us; 35us; 36us; 17us; 28us; 35us; 36us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 15us; 28us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 1us; 28us; 3us; 28us; 35us; 36us; 1us; 28us; 1us; 28us; 2us; 28us; 35us; 1us; 28us; 1us; 29us; 2us; 29us; 37us; 1us; 29us; 2us; 29us; 37us; 16us; 29us; 37us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 15us; 29us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 1us; 29us; 2us; 29us; 37us; 1us; 29us; 2us; 30us; 31us; 2us; 30us; 31us; 1us; 30us; 1us; 30us; 15us; 30us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 15us; 31us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 1us; 31us; 1us; 31us; 2us; 32us; 33us; 2us; 32us; 75us; 15us; 32us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 1us; 32us; 15us; 32us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 1us; 32us; 15us; 32us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 1us; 32us; 1us; 32us; 2us; 33us; 78us; 1us; 33us; 1us; 33us; 15us; 33us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 1us; 33us; 15us; 33us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 15us; 34us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 37us; 11us; 38us; 41us; 59us; 61us; 62us; 63us; 64us; 65us; 66us; 75us; 78us; 10us; 38us; 41us; 59us; 61us; 62us; 63us; 64us; 65us; 66us; 78us; 1us; 39us; 2us; 39us; 72us; 1us; 40us; 1us; 41us; 15us; 41us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 2us; 42us; 74us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 43us; 15us; 43us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 2us; 44us; 69us; 15us; 44us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 2us; 45us; 70us; 15us; 46us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 15us; 46us; 47us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 15us; 46us; 47us; 48us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 62us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 63us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 64us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 65us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 66us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 67us; 68us; 14us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 68us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 69us; 15us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 78us; 16us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 68us; 81us; 82us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 57us; 1us; 58us; 2us; 58us; 78us; 1us; 59us; 1us; 60us; 2us; 60us; 78us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 3us; 69us; 72us; 75us; 1us; 69us; 1us; 69us; 1us; 69us; 1us; 70us; 2us; 70us; 78us; 1us; 70us; 1us; 71us; 1us; 72us; 2us; 72us; 75us; 1us; 72us; 1us; 73us; 2us; 73us; 78us; 1us; 74us; 1us; 75us; 2us; 75us; 78us; 1us; 75us; 2us; 76us; 77us; 2us; 76us; 78us; 1us; 77us; 1us; 78us; 1us; 78us; 1us; 80us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; 2us; 89us; 91us; 2us; 89us; 91us; 2us; 89us; 91us; 2us; 89us; 91us; 1us; 90us; 1us; 90us; 1us; 90us; 1us; 91us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 124us; 126us; 129us; 131us; 147us; 149us; 151us; 153us; 157us; 159us; 163us; 181us; 197us; 199us; 203us; 205us; 207us; 210us; 212us; 214us; 217us; 219us; 222us; 239us; 255us; 257us; 260us; 262us; 265us; 268us; 270us; 272us; 288us; 290us; 292us; 294us; 296us; 312us; 314us; 316us; 319us; 322us; 338us; 340us; 356us; 358us; 374us; 376us; 378us; 381us; 383us; 385us; 401us; 403us; 419us; 421us; 423us; 425us; 427us; 443us; 445us; 447us; 449us; 451us; 453us; 455us; 457us; 469us; 480us; 482us; 485us; 487us; 489us; 505us; 508us; 510us; 512us; 514us; 516us; 532us; 535us; 551us; 554us; 570us; 586us; 602us; 618us; 634us; 650us; 666us; 682us; 698us; 714us; 730us; 746us; 762us; 778us; 794us; 810us; 826us; 842us; 858us; 873us; 889us; 905us; 921us; 938us; 940us; 942us; 944us; 946us; 948us; 950us; 952us; 954us; 956us; 958us; 960us; 962us; 964us; 966us; 969us; 971us; 973us; 976us; 978us; 980us; 982us; 984us; 986us; 988us; 990us; 992us; 996us; 998us; 1000us; 1002us; 1004us; 1007us; 1009us; 1011us; 1013us; 1016us; 1018us; 1020us; 1023us; 1025us; 1027us; 1030us; 1032us; 1035us; 1038us; 1040us; 1042us; 1044us; 1046us; 1048us; 1050us; 1052us; 1054us; 1056us; 1058us; 1060us; 1062us; 1064us; 1067us; 1070us; 1073us; 1076us; 1078us; 1080us; 1082us; |]
let _fsyacc_action_rows = 221
let _fsyacc_actionTableElements = [|3us; 16386us; 34us; 212us; 37us; 211us; 42us; 23us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 34us; 212us; 37us; 211us; 42us; 23us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 24us; 14us; 54us; 12us; 3us; 32768us; 1us; 16us; 24us; 14us; 54us; 13us; 1us; 16390us; 5us; 19us; 0us; 16391us; 1us; 16391us; 1us; 29us; 3us; 32768us; 1us; 16us; 24us; 14us; 54us; 12us; 1us; 16392us; 5us; 19us; 3us; 32768us; 1us; 16us; 24us; 14us; 54us; 12us; 2us; 32768us; 2us; 18us; 5us; 19us; 0us; 16393us; 2us; 32768us; 6us; 20us; 55us; 21us; 0us; 16394us; 1us; 32768us; 6us; 22us; 0us; 16395us; 1us; 32768us; 54us; 24us; 1us; 32768us; 1us; 25us; 2us; 16398us; 34us; 212us; 37us; 211us; 1us; 32768us; 2us; 27us; 1us; 32768us; 3us; 37us; 0us; 16396us; 2us; 16398us; 34us; 212us; 37us; 211us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 35us; 2us; 32768us; 34us; 212us; 37us; 211us; 0us; 16401us; 22us; 16403us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 34us; 212us; 36us; 56us; 37us; 211us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 68us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 1us; 32768us; 4us; 39us; 0us; 16402us; 22us; 16403us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 34us; 212us; 36us; 56us; 37us; 211us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 68us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 0us; 16404us; 1us; 32768us; 7us; 43us; 22us; 16403us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 34us; 212us; 36us; 56us; 37us; 211us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 68us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 35us; 65us; 0us; 16407us; 15us; 32768us; 7us; 49us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 0us; 16408us; 14us; 32768us; 1us; 190us; 7us; 51us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 0us; 16409us; 15us; 32768us; 7us; 53us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 1us; 57us; 1us; 32768us; 1us; 58us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 15us; 32768us; 2us; 62us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 15us; 32768us; 2us; 61us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 20us; 32768us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 36us; 55us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 67us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 20us; 32768us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 36us; 56us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 68us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 1us; 32768us; 35us; 64us; 20us; 32768us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 36us; 55us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 67us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 20us; 32768us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 36us; 56us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 68us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 0us; 16412us; 1us; 32768us; 1us; 69us; 1us; 32768us; 1us; 70us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 15us; 32768us; 2us; 74us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 15us; 32768us; 2us; 73us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 20us; 32768us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 36us; 55us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 67us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 20us; 32768us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 36us; 56us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 68us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 0us; 16413us; 20us; 32768us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 36us; 55us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 67us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 2us; 32768us; 43us; 78us; 48us; 83us; 1us; 32768us; 1us; 79us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 15us; 32768us; 2us; 81us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 1us; 32768us; 7us; 82us; 0us; 16414us; 1us; 32768us; 1us; 84us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 15us; 32768us; 2us; 86us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 1us; 32768us; 7us; 87us; 0us; 16415us; 3us; 32768us; 1us; 89us; 24us; 198us; 54us; 194us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 15us; 32768us; 7us; 91us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 15us; 32768us; 7us; 93us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 15us; 32768us; 2us; 95us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 20us; 32768us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 36us; 55us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 67us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 0us; 16416us; 2us; 32768us; 5us; 201us; 52us; 98us; 1us; 32768us; 1us; 99us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 15us; 32768us; 8us; 101us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 15us; 32768us; 2us; 103us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 20us; 32768us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 36us; 55us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 67us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 0us; 16417us; 1us; 32768us; 1us; 106us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 15us; 32768us; 2us; 108us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 1us; 32768us; 3us; 109us; 2us; 32768us; 50us; 213us; 51us; 217us; 1us; 32768us; 4us; 111us; 0us; 16418us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 10us; 16422us; 2us; 197us; 5us; 201us; 9us; 120us; 27us; 170us; 28us; 173us; 29us; 174us; 30us; 175us; 31us; 176us; 32us; 177us; 33us; 178us; 9us; 16422us; 5us; 201us; 9us; 120us; 27us; 170us; 28us; 173us; 29us; 174us; 30us; 175us; 31us; 176us; 32us; 177us; 33us; 178us; 0us; 16423us; 1us; 16423us; 2us; 191us; 0us; 16424us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 14us; 16425us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 1us; 16458us; 1us; 123us; 13us; 16463us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 1us; 32768us; 2us; 125us; 0us; 16426us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 0us; 16427us; 13us; 32768us; 1us; 181us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 14us; 16428us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 1us; 16429us; 1us; 185us; 3us; 16430us; 24us; 157us; 25us; 158us; 26us; 159us; 3us; 16431us; 24us; 157us; 25us; 158us; 26us; 159us; 0us; 16432us; 0us; 16433us; 0us; 16434us; 9us; 16435us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 9us; 16436us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 9us; 16437us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 9us; 16438us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 9us; 16439us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 9us; 16440us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 15us; 32768us; 11us; 166us; 12us; 167us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 14us; 16441us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 3us; 16446us; 24us; 157us; 25us; 158us; 26us; 159us; 3us; 16447us; 24us; 157us; 25us; 158us; 26us; 159us; 3us; 16448us; 24us; 157us; 25us; 158us; 26us; 159us; 3us; 16449us; 24us; 157us; 25us; 158us; 26us; 159us; 3us; 16450us; 24us; 157us; 25us; 158us; 26us; 159us; 11us; 16451us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 14us; 32768us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 12us; 16452us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 15us; 32768us; 2us; 184us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 15us; 32768us; 6us; 202us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 15us; 16465us; 8us; 204us; 11us; 166us; 14us; 180us; 15us; 179us; 16us; 160us; 17us; 161us; 18us; 162us; 19us; 163us; 20us; 164us; 21us; 165us; 22us; 155us; 23us; 156us; 24us; 157us; 25us; 158us; 26us; 159us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 3us; 32768us; 1us; 195us; 24us; 198us; 54us; 194us; 1us; 16442us; 5us; 201us; 0us; 16443us; 3us; 32768us; 1us; 195us; 24us; 198us; 54us; 194us; 1us; 16444us; 5us; 201us; 0us; 16445us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 14us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 53us; 182us; 54us; 122us; 55us; 206us; 56us; 207us; 1us; 32768us; 8us; 183us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 0us; 16453us; 3us; 32768us; 1us; 195us; 24us; 198us; 54us; 194us; 2us; 32768us; 2us; 187us; 5us; 201us; 0us; 16454us; 0us; 16455us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 0us; 16456us; 3us; 32768us; 1us; 195us; 24us; 198us; 54us; 194us; 1us; 16457us; 5us; 201us; 0us; 16458us; 3us; 32768us; 1us; 195us; 24us; 198us; 54us; 194us; 2us; 32768us; 2us; 197us; 5us; 201us; 0us; 16459us; 8us; 32768us; 1us; 190us; 10us; 192us; 23us; 208us; 24us; 198us; 38us; 210us; 54us; 194us; 55us; 206us; 56us; 207us; 1us; 16460us; 5us; 201us; 0us; 16461us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 0us; 16462us; 0us; 16464us; 13us; 32768us; 1us; 190us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 38us; 210us; 39us; 128us; 40us; 130us; 54us; 122us; 55us; 206us; 56us; 207us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 1us; 32768us; 55us; 209us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 6us; 32768us; 1us; 189us; 10us; 192us; 23us; 208us; 38us; 210us; 55us; 206us; 56us; 207us; 1us; 32768us; 12us; 215us; 20us; 32768us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 36us; 55us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 67us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 2us; 16473us; 50us; 213us; 51us; 217us; 1us; 32768us; 12us; 218us; 20us; 32768us; 1us; 190us; 3us; 37us; 10us; 192us; 13us; 126us; 23us; 208us; 24us; 198us; 27us; 168us; 28us; 171us; 36us; 55us; 38us; 210us; 39us; 128us; 40us; 130us; 41us; 50us; 43us; 67us; 44us; 88us; 47us; 76us; 49us; 105us; 54us; 122us; 55us; 206us; 56us; 207us; 0us; 16474us; 0us; 16475us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 17us; 21us; 25us; 27us; 28us; 30us; 34us; 36us; 40us; 43us; 44us; 47us; 48us; 50us; 51us; 53us; 55us; 58us; 60us; 62us; 63us; 66us; 68us; 70us; 71us; 72us; 74us; 77us; 78us; 101us; 103us; 104us; 127us; 128us; 130us; 153us; 154us; 155us; 157us; 158us; 174us; 175us; 190us; 191us; 207us; 208us; 209us; 211us; 213us; 227us; 241us; 257us; 273us; 294us; 315us; 317us; 338us; 359us; 360us; 362us; 364us; 378us; 392us; 408us; 424us; 445us; 466us; 467us; 488us; 491us; 493us; 507us; 523us; 525us; 526us; 528us; 542us; 558us; 560us; 561us; 565us; 579us; 595us; 609us; 625us; 639us; 655us; 676us; 677us; 680us; 682us; 696us; 712us; 726us; 742us; 763us; 764us; 766us; 780us; 796us; 798us; 801us; 803us; 804us; 805us; 806us; 807us; 818us; 828us; 829us; 831us; 832us; 846us; 861us; 863us; 877us; 879us; 880us; 894us; 895us; 909us; 924us; 926us; 930us; 934us; 935us; 936us; 937us; 947us; 957us; 967us; 977us; 987us; 997us; 1013us; 1028us; 1032us; 1036us; 1040us; 1044us; 1048us; 1060us; 1075us; 1088us; 1104us; 1120us; 1136us; 1150us; 1164us; 1178us; 1192us; 1206us; 1220us; 1234us; 1248us; 1262us; 1276us; 1290us; 1304us; 1318us; 1322us; 1324us; 1325us; 1329us; 1331us; 1332us; 1346us; 1360us; 1374us; 1388us; 1402us; 1416us; 1430us; 1445us; 1447us; 1461us; 1462us; 1466us; 1469us; 1470us; 1471us; 1485us; 1499us; 1500us; 1504us; 1506us; 1507us; 1511us; 1514us; 1515us; 1524us; 1526us; 1527us; 1541us; 1542us; 1543us; 1557us; 1558us; 1559us; 1560us; 1562us; 1563us; 1564us; 1565us; 1566us; 1573us; 1575us; 1596us; 1599us; 1601us; 1622us; 1623us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 7us; 7us; 9us; 9us; 7us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 6us; 4us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; 4us; 3us; 5us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 16419us; 16420us; 16421us; 65535us; 65535us; 16423us; 65535us; 16424us; 65535us; 65535us; 65535us; 65535us; 65535us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16443us; 65535us; 65535us; 16445us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16453us; 65535us; 65535us; 16454us; 16455us; 65535us; 65535us; 16456us; 65535us; 65535us; 16458us; 65535us; 65535us; 16459us; 65535us; 65535us; 16461us; 65535us; 16462us; 16464us; 65535us; 16466us; 16467us; 16468us; 65535us; 16469us; 16470us; 16471us; 16472us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16474us; 16475us; |]
let _fsyacc_reductions ()  =    [| 
# 526 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 535 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "CPar.fsy"
                                                               Prog _1 
                   )
# 45 "CPar.fsy"
                 : Absyn.program));
# 546 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "CPar.fsy"
                                                               [] 
                   )
# 50 "CPar.fsy"
                 : 'gentype_Topdecs));
# 556 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 51 "CPar.fsy"
                 : 'gentype_Topdecs));
# 568 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 55 "CPar.fsy"
                 : 'gentype_Topdec));
# 579 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               _1 
                   )
# 56 "CPar.fsy"
                 : 'gentype_Topdec));
# 590 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 74 "CPar.fsy"
                 : 'gentype_Vardec));
# 602 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 85 "CPar.fsy"
                 : 'gentype_Vardesc));
# 613 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 93 "CPar.fsy"
                 : 'gentype_Vardesc));
# 624 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "CPar.fsy"
                                                               _2                                      
                   )
# 95 "CPar.fsy"
                 : 'gentype_Vardesc));
# 635 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 97 "CPar.fsy"
                 : 'gentype_Vardesc));
# 646 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 99 "CPar.fsy"
                 : 'gentype_Vardesc));
# 658 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 104 "CPar.fsy"
                 : 'gentype_Fundec));
# 671 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 106 "CPar.fsy"
                 : 'gentype_Fundec));
# 685 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               [] 
                   )
# 111 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 695 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               _1 
                   )
# 112 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 706 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "CPar.fsy"
                                                               [_1]     
                   )
# 116 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 717 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 117 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 729 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               Block _2 
                   )
# 122 "CPar.fsy"
                 : 'gentype_Block));
# 740 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               [] 
                   )
# 126 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 750 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 127 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 762 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 128 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 774 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               _1 
                   )
# 132 "CPar.fsy"
                 : 'gentype_Stmt));
# 785 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               _1 
                   )
# 133 "CPar.fsy"
                 : 'gentype_Stmt));
# 796 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 137 "CPar.fsy"
                 : 'gentype_StmtM));
# 807 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               Return None          
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtM));
# 817 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtM));
# 828 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               _1                   
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtM));
# 839 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtM));
# 852 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtM));
# 864 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtM));
# 876 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               DoUntil(_2, _5)      
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 888 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                                            For(_3,_5,_7,_9)  
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 902 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                                            Forin(_2,_5,_7,_9)   
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 916 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                                               Switch(_3,_6)  
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 928 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtU));
# 941 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtU));
# 953 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtU));
# 965 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               Access _1           
                   )
# 157 "CPar.fsy"
                 : 'gentype_Expr));
# 976 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               _1                  
                   )
# 158 "CPar.fsy"
                 : 'gentype_Expr));
# 987 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               _1                  
                   )
# 162 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 998 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 163 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1010 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 164 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1022 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 165 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1033 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 166 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1044 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 167 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1054 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 168 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1066 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1078 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1090 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1102 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1114 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1126 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1138 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1150 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1162 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1174 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1186 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Prim3(_1,_3,_5)     
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1199 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Self(_2,"+B",CstI 1) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1210 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Self(_1,"+",CstI 1) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1221 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Self(_2,"-B",CstI 1) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1232 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Self(_1,"-",CstI 1) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1243 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Self(_1,"+",_3)     
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1255 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Self(_1,"-",_3)     
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1267 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Self(_1,"*",_3)     
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1279 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Self(_1,"/",_3)     
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1291 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Self(_1,"%",_3)     
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1303 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1315 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1327 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Print(_3, _5)       
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1339 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Println(_3)         
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1350 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               CstI _1             
                   )
# 200 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1361 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               _2                  
                   )
# 201 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1372 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               Addr _2             
                   )
# 202 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1383 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               AccVar _1           
                   )
# 206 "CPar.fsy"
                 : 'gentype_Access));
# 1394 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               _2                  
                   )
# 207 "CPar.fsy"
                 : 'gentype_Access));
# 1405 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 208 "CPar.fsy"
                 : 'gentype_Access));
# 1416 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 209 "CPar.fsy"
                 : 'gentype_Access));
# 1427 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 210 "CPar.fsy"
                 : 'gentype_Access));
# 1439 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               []       
                   )
# 214 "CPar.fsy"
                 : 'gentype_Exprs));
# 1449 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               _1       
                   )
# 215 "CPar.fsy"
                 : 'gentype_Exprs));
# 1460 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               [_1]     
                   )
# 219 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1471 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 220 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1483 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               _1       
                   )
# 224 "CPar.fsy"
                 : 'gentype_Const));
# 1494 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                               _1       
                   )
# 225 "CPar.fsy"
                 : 'gentype_Const));
# 1505 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                               - _2     
                   )
# 226 "CPar.fsy"
                 : 'gentype_Const));
# 1516 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               -1       
                   )
# 227 "CPar.fsy"
                 : 'gentype_Const));
# 1526 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               TypI     
                   )
# 231 "CPar.fsy"
                 : 'gentype_Type));
# 1536 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               TypC     
                   )
# 232 "CPar.fsy"
                 : 'gentype_Type));
# 1546 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                                          [Case(_2,_4)]    
                   )
# 236 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1558 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                                          [Default(_3)]    
                   )
# 237 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1569 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                                          Case(_2,_4) :: _5
                   )
# 238 "CPar.fsy"
                 : 'gentype_StmtCase));
|]
# 1583 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 60;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
